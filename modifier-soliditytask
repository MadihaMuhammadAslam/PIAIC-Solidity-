pragma solidity ^0.5.0;

contract Modifier
{
    enum regType
    {
        onSite,onLine
    }

    enum qualification
    {
        BS,Other
    }    
    
   
    struct Student
    {
        uint rollNo;
        string name;
        regType rType;
        qualification qualified;
    }
    
    modifier onlyOnSite(regType _type)
    {
        if(_type == regType.onSite)
        {
            _;
        }
    }
    
    modifier onlyBS(qualification _q)
    {
        if(_q == qualification.BS)
        {
            _;
        }
    }
    
    mapping (uint => Student) public students;
    function addStudent(uint _rollNo,string memory _name,regType _type , qualification _q) 
    public onlyOnSite(_type) onlyBS(_q)

    {
        students[_rollNo] = Student(_rollNo,_name,_type,_q);
    }
}
